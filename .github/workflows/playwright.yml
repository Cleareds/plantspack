name: Playwright Tests
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  test:
    timeout-minutes: 30  # Reduced for faster feedback
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Setup Database
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
        SUPABASE_URL: http://localhost:54321
        SUPABASE_ANON_KEY: dummy_key_for_tests
        SUPABASE_SERVICE_ROLE_KEY: dummy_service_key_for_tests
        NEXTAUTH_SECRET: test_secret
        STRIPE_SECRET_KEY: ${{ secrets.STRIPE_TEST_SECRET_KEY }}
        STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_TEST_WEBHOOK_SECRET }}
      run: |
        # Set up test database schema
        psql -h localhost -U postgres -d postgres -c "
          CREATE TABLE IF NOT EXISTS users (
            id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
            email text UNIQUE NOT NULL,
            username text UNIQUE NOT NULL,
            first_name text,
            last_name text,
            bio text,
            avatar_url text,
            is_private boolean DEFAULT false,
            subscription_tier text DEFAULT 'free',
            subscription_status text DEFAULT 'active',
            created_at timestamp with time zone DEFAULT timezone('utc'::text, now()),
            updated_at timestamp with time zone DEFAULT timezone('utc'::text, now())
          );
          
          CREATE TABLE IF NOT EXISTS posts (
            id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
            user_id uuid REFERENCES users(id),
            content text NOT NULL,
            privacy text DEFAULT 'public',
            image_urls jsonb DEFAULT '[]'::jsonb,
            created_at timestamp with time zone DEFAULT timezone('utc'::text, now()),
            updated_at timestamp with time zone DEFAULT timezone('utc'::text, now())
          );
        "
        
        # Insert test users
        psql -h localhost -U postgres -d postgres -c "
          INSERT INTO users (email, username, first_name, last_name) VALUES
          ('test1@plantspack.com', 'testuser1', 'Test', 'User1'),
          ('test2@plantspack.com', 'testuser2', 'Test', 'User2')
          ON CONFLICT (email) DO NOTHING;
        "
    
    - name: Run Playwright tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
        SUPABASE_URL: http://localhost:54321
        SUPABASE_ANON_KEY: dummy_key_for_tests
        SUPABASE_SERVICE_ROLE_KEY: dummy_service_key_for_tests
        NEXTAUTH_SECRET: test_secret
        STRIPE_SECRET_KEY: ${{ secrets.STRIPE_TEST_SECRET_KEY }}
        STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_TEST_WEBHOOK_SECRET }}
      run: npx playwright test
    
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30